name: ATF CI Tests
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # 每天凌晨2点运行每日测试
    - cron: '0 2 * * *'

jobs:
  # 冒烟测试 - 快速验证
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Set up pyenv
      run: |
        pyenv install 3.12.11
        pyenv global 3.12.11
        pyenv virtualenv 3.12.11 atf
        pyenv activate atf
        
    - name: Install dependencies
      run: |
        pyenv activate atf
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Start Appium Server
      run: |
        npm install -g appium
        appium --base-path /wd/hub &
        sleep 10
        
    - name: Run Smoke Tests
      run: |
        pyenv activate atf && python scripts/run_business_tests.py --all --env ci --markers smoke --parallel 2
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: smoke-test-results
        path: |
          reports/
          logs/
          
  # 每日测试 - 完整功能验证
  daily-tests:
    name: Daily Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Set up pyenv
      run: |
        pyenv install 3.12.11
        pyenv global 3.12.11
        pyenv virtualenv 3.12.11 atf
        pyenv activate atf
        
    - name: Install dependencies
      run: |
        pyenv activate atf
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Start Appium Server
      run: |
        npm install -g appium
        appium --base-path /wd/hub &
        sleep 10
        
    - name: Run Daily Tests
      run: |
        pyenv activate atf && python scripts/run_business_tests.py --all --env ci --markers daily --parallel 4
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: daily-test-results
        path: |
          reports/
          logs/
          
  # 回归测试 - 完整测试套件
  regression-tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 120
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Set up pyenv
      run: |
        pyenv install 3.12.11
        pyenv global 3.12.11
        pyenv virtualenv 3.12.11 atf
        pyenv activate atf
        
    - name: Install dependencies
      run: |
        pyenv activate atf
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Start Appium Server
      run: |
        npm install -g appium
        appium --base-path /wd/hub &
        sleep 10
        
    - name: Run Regression Tests
      run: |
        pyenv activate atf && python scripts/run_business_tests.py --all --env ci --markers regression --parallel 4 --allure
        
    - name: Generate Allure Report
      if: success() || failure()
      run: |
        npm install -g allure-commandline
        allure generate reports/allure-results --clean -o reports/allure-report
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: regression-test-results
        path: |
          reports/
          logs/
          
  # 业务特定测试 - Cocokara
  cocokara-tests:
    name: Cocokara Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Set up pyenv
      run: |
        pyenv install 3.12.11
        pyenv global 3.12.11
        pyenv virtualenv 3.12.11 atf
        pyenv activate atf
        
    - name: Install dependencies
      run: |
        pyenv activate atf
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Start Appium Server
      run: |
        npm install -g appium
        appium --base-path /wd/hub &
        sleep 10
        
    - name: Run Cocokara Tests
      run: |
        pyenv activate atf && python scripts/run_business_tests.py --business jp.co.matsukiyococokara.app --env ci --markers smoke daily
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cocokara-test-results
        path: |
          reports/
          logs/
          
  # 测试报告汇总
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [smoke-tests, daily-tests, regression-tests, cocokara-tests]
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v3
      
    - name: Generate Summary Report
      run: |
        echo "## Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Smoke Tests | ${{ needs.smoke-tests.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Daily Tests | ${{ needs.daily-tests.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Regression Tests | ${{ needs.regression-tests.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Cocokara Tests | ${{ needs.cocokara-tests.result }} |" >> $GITHUB_STEP_SUMMARY
